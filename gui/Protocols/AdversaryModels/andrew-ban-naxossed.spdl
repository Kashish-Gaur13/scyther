# BAN modified Andrew Secure RPC
#
# Modelled after the description in the SPORE library
# http://www.lsv.ens-cachan.fr/spore/andrewBAN.html
#
# Then Naxossed' by Cas.
#
usertype SessionKey;
secret k: Function;
const Fresh: Function;
const Compromised: Function;

const h: Function;
const unh: Function;
inversekeys(h,unh);

protocol andrew-Ban-Naxos(I,R)
{
    role I
    {
        const ni: Nonce;
        var nr,nr2: Ticket;
        var kir: Ticket;

        send_1(I,R, I,{h(k(I,R),ni)}k(I,R) );
        read_2(R,I, {h(k(I,R),ni),nr}k(I,R) );
        send_3(I,R, {nr}k(I,R) );
        read_4(R,I, {kir,nr2,h(k(I,R),ni)}k(I,R) );
        claim_I1(I,Nisynch);
        claim_I2(I,Niagree);
        claim_I3(I,SKR, kir);
        claim_I5(I,Empty, (Fresh,kir));
    }    
    
    role R
    {
        var ni: Ticket;
        const nr,nr2: Nonce;
        const kir: Nonce;

        read_1(I,R, I,{ni}k(I,R) );
        send_2(R,I, {ni,h(k(I,R),nr)}k(I,R) );
        read_3(I,R, {h(k(I,R),nr)}k(I,R) );
        send_4(R,I, {h(k(I,R),kir),h(k(I,R),nr2),ni}k(I,R) );
        claim_R1(R,Nisynch);
        claim_R2(R,Niagree);
        claim_R3(R,SKR, h(k(I,R),kir));
        claim_R5(R,Empty, (Fresh,h(k(I,R),kir)));
    }
}

