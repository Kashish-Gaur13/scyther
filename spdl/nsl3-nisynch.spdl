const pk: Function;
secret sk: Function;
inversekeys (pk,sk);

protocol nsl3(I,R)
{
	role I
	{
		const ni: Nonce;
		var nr: Nonce;

		send_1(I,R, {I,ni}pk(R) );
		read_2(R,I, {ni,nr,R}pk(I) );
		send_3(I,R, {nr}pk(R) );
		claim_4(I,Nisynch);
		claim_5(I,Secret,ni,nr);
	}	
	
	role R
	{
		var ni: Nonce;
		const nr: Nonce;

		read_1(I,R, {I,ni}pk(R) );
		send_2(R,I, {ni,nr,R}pk(I) );
		read_3(I,R, {nr}pk(R) );
		claim_6(R,Nisynch);
		claim_7(R,Secret,ni,nr);
	}
}

const Alice,Bob,Eve: Agent;

untrusted Eve;
const ne: Nonce;
compromised sk(Eve);

run nsl3.I(Agent,Agent);
run nsl3.R(Agent,Agent);
run nsl3.I(Agent,Agent);
run nsl3.R(Agent,Agent);
